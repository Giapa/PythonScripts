#!/usr/bin/env python

import scapy.all as scapy
import argparse

def get_arguments():
    parser=argparse.ArgumentParser()
    parser.add_argument("-i","--ip",dest="ip",help="The ip you are searching for.")
    option= parser.parse_args()
    if not option.ip:
        return "192.168.1.1/24"
    else:
        return option.ip
def scan(ip):
    arp_request = scapy.ARP(pdst=ip)
    broadcast=scapy.Ether(dst="ff:ff:ff:ff:ff:ff") #ethernet object
    arp_request_broadcast= broadcast/arp_request # / = append
    answered_list = scapy.srp(arp_request_broadcast, timeout=1, verbose=False)[0] #2 lists and we keep the 1. Verbose false means less uneccessary info

    client_list = []
    for element in answered_list:
        client_dict = {"ip":element[1].psrc,"mac":element[1].hwsrc}
        client_list.append(client_dict)
    return client_list

def print_result(results_list):
    print("Ip\t\t\tMac Adress\n--------------------------------------")
    for client in results_list:
        print(client["ip"]+"\t\t\t"+client["mac"])

option=get_arguments()
scan_result=scan(option)
print_result(scan_result)
